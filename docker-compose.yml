version: '3.4'

#services:
#  graphqlserver:
#    image: ${DOCKER_REGISTRY-}graphqlserver
#    build:
#      context: .
#      dockerfile: GraphQLServer/Dockerfile


networks:
  backend_net:
    ipam:
      config:
        - subnet: 192.168.0.0/24

services:
  graphqlserver:
    container_name: graph-ql-server
    image: ${DOCKER_REGISTRY-}graphqlserver
    ports:
      - "80"
    networks:
      backend_net:
        ipv4_address: 192.168.0.2
    environment:
      PriceTracker_ConnectionString: "Server=ms_sql;Database=PriceTracker;User=sa;Password=ms_sql_ROOT_password_25662735;"
      JWT_AUTH_ISSUER: "JWT_AUTH_ISSUER"
      JWT_AUTH_AUDIENCE: "JWT_AUTH_AUDIENCE"
      JWT_AUTH_KEY: "JWT_AUTH_KEY_LONG_ENOUGH_LONGER_IS_BETTER"
      RabbitMqHost: "192.168.0.5"
      NewItemRoutingKey: "NEW_ITEM"
      ParserExchangeKey: "PARSER"
      RedisConnectionString: "192.168.0.9:6379"
    build:
      context: .
      dockerfile: GraphQLServer/Dockerfile
    depends_on:
      - ms_sql
      - redis
    healthcheck:
      test: curl --fail http://192.168.0.2:80/healthcheck || exit 1
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 1m



  ms_sql:
   #image: mcr.microsoft.com/mssql/server:2022-latest
   image: mcr.microsoft.com/mssql/server:2019-CU14-ubuntu-20.04
   user: root
   ports:
     - 1433:1433
   networks:
     backend_net:
      ipv4_address: 192.168.0.3
   environment:
    ACCEPT_EULA: "Y"
    MSSQL_SA_PASSWORD: ms_sql_ROOT_password_25662735
    TZ: Europe/Kiev
   volumes:
      - "./mssql/data/:/var/opt/mssql/data/"
      - "./mssql/log/:/var/opt/mssql/log/"
      - "./mssql/secrets/:/var/opt/mssql/secrets/"
  redis:
    image: redis:7.0.11-alpine
    restart: always
    ports:
      - 6379:6379
    #command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - "./cache/:/data/"
    networks:
      backend_net:
        ipv4_address: 192.168.0.9


  rozetkaparserservice:
    container_name: rozetka-product-parser
    image: ${DOCKER_REGISTRY-}rozetkaparserservice
    networks:
      backend_net:
        ipv4_address: 192.168.0.4

    environment:
      ConsumerExchangeKey: "CONSUMER"
      ParserExchangeKey: "PARSER"
      RabbitMqHost: "192.168.0.5"
      TZ: Europe/Kiev

    build:
      context: .
      dockerfile: RozetkaParserService/Dockerfile
    depends_on:
      - rabbit_mq

  rabbit_mq:
    image: rabbitmq:3.11-management
    ports:
     - 5672:5672
     - 15672:15672
    networks:
      backend_net:
       ipv4_address: 192.168.0.5

  dataconsumer:
    container_name: data-consumer
    image: ${DOCKER_REGISTRY-}dataconsumer
    networks:
      backend_net:
       ipv4_address: 192.168.0.6

    build:
      context: .
      dockerfile: DataConsumer/Dockerfile
    environment:
      ConsumerExchangeKey: "CONSUMER"
      NewItemRoutingKey: "NEW_ITEM"
      UpdateItemRoutingKey: "UPDATE_ITEM"
      RabbitMqHost: "192.168.0.5"
      InputQueueName: "CONSUMER_INPUT_QUEUE"
      GraphQlServerAddress: "http://192.168.0.2:80/graphql"

    depends_on:
      - rabbit_mq
      - graphqlserver


  pricetrackscheduler:
    image: ${DOCKER_REGISTRY-}pricetrackscheduler
    networks:
      backend_net:
       ipv4_address: 192.168.0.7

    build:
      context: .
      dockerfile: PriceTrackScheduler/Dockerfile
    environment:
      RabbitMqHost: "192.168.0.5"
      ParserExchangeKey: "PARSER"
      ParserUpdateRouteKey: "UPDATE_ITEM"
      WaitMilliseconds: "60000"
      GraphQlServerAddress: "http://192.168.0.2:80/graphql"
    depends_on:
      - rozetkaparserservice
      - rabbit_mq
      - dataconsumer
      - graphqlserver

  api:
    image: ${DOCKER_REGISTRY-}api
    networks:
      backend_net:
        ipv4_address: 192.168.0.8
    ports:
      - "62136:443"
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      GraphQlServerAddress: "http://192.168.0.2:80/graphql"
      JWT_AUTH_ISSUER: "JWT_AUTH_ISSUER"
      JWT_AUTH_AUDIENCE: "JWT_AUTH_AUDIENCE"
      JWT_AUTH_KEY: "JWT_AUTH_KEY_LONG_ENOUGH_LONGER_IS_BETTER"
      RabbitMqHost: "192.168.0.5"
      NewItemRoutingKey: "NEW_ITEM"
      ParserExchangeKey: "PARSER"
    profiles:
      - donotstart

    depends_on:
      - graphqlserver



  #pricetrackerweb:
  #  image: ${DOCKER_REGISTRY-}pricetrackerweb
  #  networks:
  #    backend_net:
  #      ipv4_address: 192.168.0.9
  #  ports:
  #    - "80"
  #  build:
  #    context: .
  #    dockerfile: PriceTrackerWeb/Dockerfile
  #  environment:
  #    GraphQlServerAddress: "http://192.168.0.2:80/graphql"
  #    JWT_AUTH_ISSUER: "JWT_AUTH_ISSUER"
  #    JWT_AUTH_AUDIENCE: "JWT_AUTH_AUDIENCE"
  #    JWT_AUTH_KEY: "JWT_AUTH_KEY_LONG_ENOUGH_LONGER_IS_BETTER"
  #  depends_on:
  #    - graphqlserver


